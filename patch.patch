--- a/sites/all/modules/mediamosa/core/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.class.inc
+++ b/sites/all/modules/mediamosa/core/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.class.inc
@@ -345,31 +345,44 @@ class mediamosa_asset_mediafile_play_proxy {
     // Not an array here.
     assert(!is_array($app_id));
 
-    $content_type = '';
-    if (isset($mediafile_ext[mediamosa_asset_mediafile_db::URI]) && trim($mediafile_ext[mediamosa_asset_mediafile_db::URI]) != '') {
-      $streaming_server_uri = trim($mediafile_ext[mediamosa_asset_mediafile_db::URI]);
-    }
-    else {
-      $streaming_server_uri = self::get_media_server($response_type, $mediafile_ext);
-    }
+    // become semantically correct
+    if ($response_type == self::RESPONSE_METAFILE)  {
+      $tickets = $ticket;
+      $mediafile_exts = $mediafile_ext;
+
+      $content_type = '';
+      $streaming_server_uri = self::get_media_server($response_type, $mediafile_ext['0']);
+
+      // Replace ticket param in URI.
+      $streaming_server_ticket_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $ticket));
+    } else {
+      $content_type = '';
+      if (isset($mediafile_ext[mediamosa_asset_mediafile_db::URI]) && trim($mediafile_ext[mediamosa_asset_mediafile_db::URI]) != '') {
+        $streaming_server_uri = trim($mediafile_ext[mediamosa_asset_mediafile_db::URI]);
+      }
+      else {
+        $streaming_server_uri = self::get_media_server($response_type, $mediafile_ext);
+      }
 
-    // Replace {TICKET} with app_id / ticket.
-    if ($response_type != self::RESPONSE_STILL) {
-      $streaming_server_ticket_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $app_id . '/' . $ticket));
-    }
+      // Replace {TICKET} with app_id / ticket.
+      if ($response_type != self::RESPONSE_STILL) {
+        $streaming_server_ticket_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $app_id . '/' . $ticket));
+      }
 
-    // Uri for non-tickets (still, download etc).
-    foreach ($stills as $key => $value) {
-      $stills[$key]['still_ticket'] = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $stills[$key]['ticket']));
-    }
+      // Uri for non-tickets (still, download etc).
+      foreach ($stills as $key => $value) {
+        $stills[$key]['still_ticket'] = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $stills[$key]['ticket']));
+      }
 
-    // Replace ticket param in URI.
-    $streaming_server_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $ticket));
+      // Replace ticket param in URI.
+      $streaming_server_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $ticket));
+    }
 
     // So it exists.
     $variables = array();
     $output = '';
 
+
     switch ($response_type) {
       case self::RESPONSE_METAFILE:
 
@@ -397,13 +410,26 @@ class mediamosa_asset_mediafile_play_proxy {
                 $uri_base = mediamosa_unicode::substr($streaming_server_ticket_uri, 0, $last_index + 1);
                 $uri_src = mediamosa_unicode::substr($streaming_server_ticket_uri, $last_index + 1);
               }
+
+
               // Create the output.
               $output = '<smil>' . "\n";
               $output .= '  <head>' . "\n";
               $output .= '    <meta base="' . $uri_base . '" />' . "\n";
               $output .= '  </head>' . "\n";
               $output .= '  <body>' . "\n";
-              $output .= '    <video src="' . $uri_src . '" />' . "\n";
+              $output .= '    <switch>' . "\n";
+
+              foreach($tickets as $ticket)  {
+                $streaming_server_ticket_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $app_id . '/' . $ticket));
+                // Replace ticket param in URI.
+                $streaming_server_uri = strtr($streaming_server_uri, array(self::PARAM_URI_TICKET => $ticket));
+                $output .= '      <video src="' . $uri_src . '" '. 'system-bitrate="' . $uri_src_bitrate . '" ' . 'width="' . $uri_src_width . '"/>' . "\n";
+              }
+
+              // foreach($uri_srcs as uri_src)  {
+              // }
+              $output .= '    <switch>' . "\n";
               $output .= '  </body>' . "\n";
               $output .= '</smil>';
               // Content type.
diff --git a/sites/all/modules/mediamosa/modules/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.rest.class.inc b/sites/all/modules/mediamosa/modules/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.rest.class.inc
index 0d51ecc..9cef434 100644
--- a/sites/all/modules/mediamosa/modules/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.rest.class.inc
+++ b/sites/all/modules/mediamosa/modules/asset/mediafile/play_proxy/mediamosa_asset_mediafile_play_proxy.rest.class.inc
@@ -283,44 +283,79 @@ class mediamosa_rest_call_asset_mediafile_play extends mediamosa_rest_call {
       }
 
       // Get mediafile.
-      $mediafile_ext = mediamosa_asset_mediafile::must_exists($mediafile_id);
+      if ($response_type != mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE)  {
+        $mediafile_ext = mediamosa_asset_mediafile::must_exists($mediafile_id);
+        // Make sure asset_id matches.
+        if ($mediafile_ext[mediamosa_asset_mediafile_db::ASSET_ID] != $asset_id) {
+          throw new mediamosa_exception_error(mediamosa_error::ERRORCODE_INVALID_ASSET_MEDIAFILE_COMBINATION);
+        }
 
-      // Make sure asset_id matches.
-      if ($mediafile_ext[mediamosa_asset_mediafile_db::ASSET_ID] != $asset_id) {
-        throw new mediamosa_exception_error(mediamosa_error::ERRORCODE_INVALID_ASSET_MEDIAFILE_COMBINATION);
+        // Get the metadata.
+        $mediafile_ext['metadata'] = mediamosa_asset_mediafile_metadata::get_with_mediafileid($mediafile_id);
+      } elseif ($response_type == mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE) {
+        $mediafile_exts = mediamosa_asset_mediafile::get_by_asset_id($asset_id, array(),
+                                                                     array(
+                                                                        'get_originals_only' => 'exclude_original',
+                                                                        'exclude_stills' => TRUE,
+                                                                     ));
+        foreach($mediafile_exts as $mediafile_ext)  {
+          $mediafile_ext['metadata'] = mediamosa_asset_mediafile_metadata::get_with_mediafileid($mediafile_id);
+        }
       }
 
-      // Get the metadata.
-      $mediafile_ext['metadata'] = mediamosa_asset_mediafile_metadata::get_with_mediafileid($mediafile_id);
-
       // Test if access on unappropriate flag.
       mediamosa_asset::is_unappropriate($asset_id, $app_ids, $user_id, $is_app_admin, TRUE);
 
       // Check if allowed to play.
       mediamosa_asset_mediafile_metadata::is_playable($mediafile_id);
 
+
       // Check access.
-      mediamosa_acl::access_check_on_object(
-        mediamosa_acl::ACL_TYPE_MEDIAFILE,
-        $asset_id,
-        $mediafile_id,
-        $app_id,
-        $user_id,
-        $acl_group_id,
-        $acl_domain,
-        $acl_realm,
-        $is_app_admin
-      );
+      if ($response_type != mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE)  {
+        mediamosa_acl::access_check_on_object(
+          mediamosa_acl::ACL_TYPE_MEDIAFILE,
+          $asset_id,
+          $mediafile_id,
+          $app_id,
+          $user_id,
+          $acl_group_id,
+          $acl_domain,
+          $acl_realm,
+          $is_app_admin
+        );
+      } elseif ($response_type == mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE) {
+        foreach($mediafile_exts as $mediafile_ext)  {
+          mediamosa_acl::access_check_on_object(
+            mediamosa_acl::ACL_TYPE_MEDIAFILE,
+            $asset_id,
+            $mediafile_id,
+            $app_id,
+            $user_id,
+            $acl_group_id,
+            $acl_domain,
+            $acl_realm,
+            $is_app_admin
+          );
+        }
+      }
     }
     else {
       $mediafile_ext['asset_id'] = $asset_id;
     }
 
-    // Create ticket ID.
-    $ticket = mediamosa_db::uuid($app_id);
-
     if (empty($mediafile_ext[mediamosa_asset_mediafile_db::URI]) && $response_type != mediamosa_asset_mediafile_play_proxy::RESPONSE_STILL) {
-      $ticket = mediamosa_ticket::create_play_proxy($ticket, $mediafile_ext, $response_type, $app_id, $user_id, $still_id);
+      if ($response_type != mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE)  {
+        // Create ticket ID.
+        $ticket = mediamosa_db::uuid($app_id);
+        $ticket = mediamosa_ticket::create_play_proxy($ticket, $mediafile_ext, $response_type, $app_id, $user_id, $still_id);
+      } else {
+        $tickets = array();
+        // Create ticket ID.
+        $ticket = mediamosa_db::uuid($app_id);
+        foreach ($mediafile_exts as $mediafile_ext) {
+          $tickets[] = mediamosa_ticket::create_play_proxy($ticket, $mediafile_ext, $response_type, $app_id, $user_id, $still_id);
+        }
+      }
     }
 
     // If response type is still, we get all information of all stills with all details.
@@ -457,21 +492,39 @@ class mediamosa_rest_call_asset_mediafile_play extends mediamosa_rest_call {
     $asset_metadata = mediamosa_asset_metadata::metadata_get($asset_id);
 
     // Create the response.
-    $response = mediamosa_asset_mediafile_play_proxy::create_response(
-      $response_type,
-      $app_id,
-      $ticket,
-      $asset_id,
-      $this->get_param_value(self::AUTOSTART),
-      $this->get_param_value(self::WIDTH),
-      $this->get_param_value(self::HEIGHT),
-      $this->get_param_value(self::START),
-      $this->get_param_value(self::DURATION),
-      $this->get_param_value(self::IS_APP_ADMIN),
-      $asset_metadata,
-      $mediafile_ext,
-      $a_stills
-    );
+    if ($response_type != mediamosa_asset_mediafile_play_proxy::RESPONSE_METAFILE)  {
+        $response = mediamosa_asset_mediafile_play_proxy::create_response(
+            $response_type,
+            $app_id,
+            $ticket,
+            $asset_id,
+            $this->get_param_value(self::AUTOSTART),
+            $this->get_param_value(self::WIDTH),
+            $this->get_param_value(self::HEIGHT),
+            $this->get_param_value(self::START),
+            $this->get_param_value(self::DURATION),
+            $this->get_param_value(self::IS_APP_ADMIN),
+            $asset_metadata,
+            $mediafile_ext,
+            $a_stills
+        );
+    } else {
+        $response = mediamosa_asset_mediafile_play_proxy::create_response(
+            $response_type,
+            $app_id,
+            $tickets,
+            $asset_id,
+            $this->get_param_value(self::AUTOSTART),
+            $this->get_param_value(self::WIDTH),
+            $this->get_param_value(self::HEIGHT),
+            $this->get_param_value(self::START),
+            $this->get_param_value(self::DURATION),
+            $this->get_param_value(self::IS_APP_ADMIN),
+            $asset_metadata,
+            $mediafile_exts,
+            $a_stills
+        );
+    }
 
     // All ok, now set played + 1
     mediamosa_asset::asset_played($asset_id);
